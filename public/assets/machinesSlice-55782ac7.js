import{n as u}from"./index-e726cb3b.js";const s=u.injectEndpoints({endpoints:r=>({getMachines:r.query({queryFn:async(e,t,n,i)=>({data:(await i("/machines/")).data}),providesTags:e=>e?[...e.map(({_id:t})=>({type:"Machines",id:t})),{type:"Machines",id:"LIST"}]:[{type:"Machines",id:"LIST"}]}),getMachine:r.query({queryFn:async(e,t,n,i)=>({data:(await i(`/machines/${e}`)).data}),providesTags:(e,t,n)=>[{type:"Machines",id:n}]}),addMachine:r.mutation({query:e=>({url:"/machines/",method:"POST",body:{name:e}}),invalidatesTags:["Statistics"],async onQueryStarted(e,{dispatch:t,queryFulfilled:n}){try{const{data:i}=await n;t(s.util.updateQueryData("getMachines",void 0,a=>{a.push(i)}))}catch(i){console.log("error adding machine, invalidating {Machines - LIST}",i),t(s.util.invalidateTags([{type:"Machines",id:"LIST"}]))}}}),saveMachine:r.mutation({query:({machineDetails:e,machineId:t})=>({url:`/machines/${t}/save`,method:"POST",body:e}),invalidatesTags:["Schedules","Statistics"],async onQueryStarted({machineDetails:e,machineId:t},{dispatch:n,queryFulfilled:i}){n(s.util.updateQueryData("getMachine",t,a=>{a.name=e.name,a.ownerId=e.ownerId,a.amountOfWorkers=e.amountOfWorkers,a.importance=e.importance})),n(s.util.updateQueryData("getMachines",void 0,a=>{const o=a.findIndex(d=>d._id===e._id);e.ownerId===null?a.splice(o,1):(a[o].amountOfWorkers=e.amountOfWorkers,a[o].name=e.name)}));try{await i}catch(a){console.log("error save, invalidating {Machines - machineId}",a),n(s.util.invalidateTags([{type:"Machines",id:t}]))}}}),deleteMachine:r.mutation({query:e=>({url:`/machines/${e}`,method:"DELETE"}),invalidatesTags:(e,t,n)=>[{type:"Machines",id:n},{type:"Machines",id:"LIST"},{type:"Statistics"}]})}),overrideExisting:!1}),{useAddMachineMutation:y,useDeleteMachineMutation:M,useGetMachineQuery:p,useGetMachinesQuery:h,useSaveMachineMutation:l}=s;export{y as a,l as b,p as c,h as u};
