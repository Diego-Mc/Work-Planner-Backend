import{n as e}from"./index-f9649d7c.js";const a=e.injectEndpoints({endpoints:e=>({getMachines:e.query({queryFn:async(e,a,i,t)=>({data:(await t("/machines/")).data}),providesTags:e=>e?[...e.map((({_id:e})=>({type:"Machines",id:e}))),{type:"Machines",id:"LIST"}]:[{type:"Machines",id:"LIST"}]}),getMachine:e.query({queryFn:async(e,a,i,t)=>({data:(await t(`/machines/${e}`)).data}),providesTags:(e,a,i)=>[{type:"Machines",id:i}]}),addMachine:e.mutation({query:e=>({url:"/machines/",method:"POST",body:{name:e}}),invalidatesTags:["Statistics"],async onQueryStarted(e,{dispatch:i,queryFulfilled:t}){try{const{data:e}=await t;i(a.util.updateQueryData("getMachines",void 0,(a=>{a.push(e)})))}catch(n){console.log("error adding machine, invalidating {Machines - LIST}",n),i(a.util.invalidateTags([{type:"Machines",id:"LIST"}]))}}}),saveMachine:e.mutation({query:({machineDetails:e,machineId:a})=>({url:`/machines/${a}/save`,method:"POST",body:e}),invalidatesTags:["Schedules","Statistics"],async onQueryStarted({machineDetails:e,machineId:i},{dispatch:t,queryFulfilled:n}){t(a.util.updateQueryData("getMachine",i,(a=>{a.name=e.name,a.ownerId=e.ownerId,a.amountOfWorkers=e.amountOfWorkers,a.importance=e.importance}))),t(a.util.updateQueryData("getMachines",void 0,(a=>{const i=a.findIndex((a=>a._id===e._id));null===e.ownerId?a.splice(i,1):(a[i].amountOfWorkers=e.amountOfWorkers,a[i].name=e.name)})));try{await n}catch(s){console.log("error save, invalidating {Machines - machineId}",s),t(a.util.invalidateTags([{type:"Machines",id:i}]))}}}),deleteMachine:e.mutation({query:e=>({url:`/machines/${e}`,method:"DELETE"}),invalidatesTags:(e,a,i)=>[{type:"Machines",id:i},{type:"Machines",id:"LIST"},{type:"Statistics"}]})}),overrideExisting:!1}),{useAddMachineMutation:i,useDeleteMachineMutation:t,useGetMachineQuery:n,useGetMachinesQuery:s,useSaveMachineMutation:d}=a;export{i as a,d as b,n as c,s as u};
